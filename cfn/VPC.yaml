AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC Template with IPAM, Multiple Subnets, Route Tables, and IGW"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Naming Convention"
        Parameters:
          - System
          - Environment
      - Label:
          default: "Tag Information"
        Parameters:
          - Project
          - Owner
          - CostCenter
      - Label:
          default: "VPC Configuration"
        Parameters:
          - IpamPoolId
      - Label:
          default: "Transit Gateway Configuration"
        Parameters:
          - TransitGatewayId
      # - Label:
      #     default: "Route 53 Configuration"
      #   Parameters:
      #     - ResolverRuleId
    ParameterLabels:
      System:
        default: "System Name"
      Environment:
        default: "Environment"
      Project:
        default: "Project Name"
      Owner:
        default: "Owner Department"
      CostCenter:
        default: "Cost Center"
      IpamPoolId:
        default: "IPAM Pool ID"
      TransitGatewayId:
        default: "Transit Gateway ID"
      # ResolverRuleId:
      #   default: "Resolver Rule ID"

Parameters:
  System:
    Type: String
    Description: "System name for the naming convention prefix. REQUIRED."
    MinLength: 1
    MaxLength: 50
    AllowedPattern: "^[a-zA-Z0-9-]+$"
    ConstraintDescription: "Must contain only alphanumeric characters and hyphens."

  Environment:
    Type: String
    Description: "Environment for the naming convention prefix. REQUIRED."
    AllowedValues:
      - prod
      - stg
      - dev
    ConstraintDescription: "Must be one of: prod, stg, dev"

  Project:
    Type: String
    Description: "Project name for tagging. REQUIRED."
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: "Project name must be between 1 and 100 characters."

  Owner:
    Type: String
    Description: "Owner department name for tagging. REQUIRED."
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: "Owner must be between 1 and 100 characters."

  CostCenter:
    Type: String
    Description: "Cost center code for tagging (numeric). REQUIRED."
    AllowedPattern: "^[0-9]+$"
    MinLength: 1
    MaxLength: 50
    ConstraintDescription: "Cost center must be numeric and between 1 and 50 digits."

  IpamPoolId:
    Type: String
    Description: "IPAM Pool ID for automatic VPC CIDR allocation. REQUIRED."
    AllowedPattern: "^ipam-pool-[0-9a-f]{17}$"
    ConstraintDescription: "Must be a valid IPAM Pool ID (ipam-pool-xxxxxxxxxxxxxxxxx)."

  TransitGatewayId:
    Type: String
    Description: "Existing Transit Gateway ID for connectivity. REQUIRED."
    AllowedPattern: "^tgw-[0-9a-f]{17}$"
    ConstraintDescription: "Must be a valid Transit Gateway ID (tgw-xxxxxxxxxxxxxxxxx)."

  # ResolverRuleId:
  #   Type: String
  #   Description: "Route 53 Resolver Rule ID to attach for DNS resolution. REQUIRED."
  #   AllowedPattern: "^rslvr-rr-[0-9a-f]{17}$"
  #   ConstraintDescription: "Must be a valid Resolver Rule ID (rslvr-rr-xxxxxxxxxxxxxxxxx)."

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      Ipv4IpamPoolId: !Ref IpamPoolId
      Ipv4NetmaskLength: 24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-vpc"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-igw"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]]  # /27 (32 IPs)
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-public-public-az1"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]]  # /27 (32 IPs)
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-public-public-az2"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  # Protected Subnets
  ProtectedSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]]  # /27 (32 IPs)
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-private-protected-az1"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  ProtectedSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [3, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]]  # /27 (32 IPs)
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-private-protected-az2"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [4, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]]  # /27 (32 IPs)
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-private-private-az1"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [5, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]]  # /27 (32 IPs)
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-private-private-az2"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  # TGW Subnets
  TgwSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      # TGW Subnet 1: Taking first /28 from the 7th /27 block
      CidrBlock: !Select [0, !Cidr [!Select [6, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]], 2, 4]]  # /28 (16 IPs)
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-private-tgw-az1"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  TgwSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      # TGW Subnet 2: Taking second /28 from the 7th /27 block
      CidrBlock: !Select [1, !Cidr [!Select [6, !Cidr [!GetAtt VPC.CidrBlock, 8, 5]], 2, 4]]  # /28 (16 IPs)
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-subnet-private-tgw-az2"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  # Route Tables
  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-rtb-public-public"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Protected Route Table
  ProtectedRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-rtb-private-protected"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  ProtectedSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ProtectedSubnet1
      RouteTableId: !Ref ProtectedRouteTable

  ProtectedSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ProtectedSubnet2
      RouteTableId: !Ref ProtectedRouteTable

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-rtb-private-private"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # TGW Route Table
  TgwRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-rtb-private-tgw"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  TgwSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref TgwSubnet1
      RouteTableId: !Ref TgwRouteTable

  TgwSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref TgwSubnet2
      RouteTableId: !Ref TgwRouteTable

  # Routes to Transit Gateway
  ProtectedRouteToTgw:
    Type: AWS::EC2::Route
    DependsOn: TransitGatewayAttachment
    Properties:
      RouteTableId: !Ref ProtectedRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref TransitGatewayId

  PrivateRouteToTgw:
    Type: AWS::EC2::Route
    DependsOn: TransitGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref TransitGatewayId

  TgwRouteToTgw:
    Type: AWS::EC2::Route
    DependsOn: TransitGatewayAttachment
    Properties:
      RouteTableId: !Ref TgwRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref TransitGatewayId

  # Transit Gateway VPC Attachment
  TransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayVpcAttachment
    Properties:
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !Ref VPC
      SubnetIds:
        - !Ref TgwSubnet1
        - !Ref TgwSubnet2
      Options:
        DnsSupport: enable
        ApplianceModeSupport: enable
        SecurityGroupReferencingSupport: enable
      Tags:
        - Key: Name
          Value: !Sub "${System}-${Environment}-tgw-attach-vpc"
        - Key: Environment
          Value: !Ref Environment
        - Key: System
          Value: !Ref System
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
        - Key: CostCenter
          Value: !Ref CostCenter

  # Route 53 Resolver Rule Association
  # ResolverRuleAssociation:
  #   Type: AWS::Route53Resolver::ResolverRuleAssociation
  #   Properties:
  #     ResolverRuleId: !Ref ResolverRuleId
  #     VPCId: !Ref VPC

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPC-ID"

  VpcCidrBlock:
    Description: VPC CIDR Block
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-VPC-CIDR"

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1-ID"

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet2-ID"

  ProtectedSubnet1Id:
    Description: Protected Subnet 1 ID
    Value: !Ref ProtectedSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-ProtectedSubnet1-ID"

  ProtectedSubnet2Id:
    Description: Protected Subnet 2 ID
    Value: !Ref ProtectedSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-ProtectedSubnet2-ID"

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1-ID"

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet2-ID"

  TgwSubnet1Id:
    Description: TGW Subnet 1 ID
    Value: !Ref TgwSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-TGWSubnet1-ID"

  TgwSubnet2Id:
    Description: TGW Subnet 2 ID
    Value: !Ref TgwSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-TGWSubnet2-ID"

  InternetGatewayId:
    Description: Internet Gateway ID
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${AWS::StackName}-IGW-ID"

  TransitGatewayAttachmentId:
    Description: Transit Gateway Attachment ID
    Value: !Ref TransitGatewayAttachment
    Export:
      Name: !Sub "${AWS::StackName}-TGW-Attachment-ID"
